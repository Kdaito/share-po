swagger: "2.0"
info:
  title: share-po
  description: "ポートフォリオを共有、評価できるサイトです"
  version: 1.0.0
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
host: "localhost:1991"
basePath: /v1
securityDefinitions:
  tokenAuth:
    name: Authorization
    type: apiKey
    in: header
tags:
  - name: user
    description: "ユーザーについて"
  - name: portfolio
    description: "ポートフォリオについて"
  - name: portfolio-tag
    description: "ポートフォリオのタグについて"
  - name: portfolio-status
    description: "ポートフォリオのステータスについて"
paths:
  /user:
    post:
      tags:
        - user
      summary: "ユーザー新規登録"
      description: "ユーザーを新規登録します"
      operationId: create-user
      security:
        - tokenAuth: []
      parameters:
        - name: body
          in: body
          required: true
          description: "ユーザー新規登録の際のbody"
          schema:
            $ref: "#/definitions/UserRequest"
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/User"
    get:
      tags:
        - user
      summary: "ユーザー情報取得"
      description: "tokenを利用してユーザー情報を取得します"
      operationId: get-user
      security:
        - tokenAuth: []
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/User"
  /portfolio-tags:
    get:
      tags:
        - portfolio-tag
      summary: "ポートフォリオタグ取得"
      description: "ポートフォリオに設定できるタグを一覧で取得します"
      operationId: get-portfolio-tag-list
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/PortfolioTagList"
  /portfolio-statuses:
    get:
      tags:
        - portfolio-status
      summary: "ポートフォリオステータス取得"
      description: "ポートフォリオに設定できるステータスを一覧で取得します"
      operationId: get-portfolio-status-list
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/PortfolioStatusList"
definitions:
  UserList:
    type: array
    items:
      $ref: "#/definitions/User"
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      firebaseUid:
        type: string
      email:
        type: string
      createdAt:
        type: string
        format: date-time
  UserRequest:
    type: object
    properties:
      firebaseUid:
        type: string
      name:
        type: string
      email:
        type: string
  PortfolioTagList:
    type: array
    items:
      $ref: "#/definitions/PortfolioTag"
  PortfolioTag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  PortfolioStatusList:
    type: array
    items:
      $ref: "#/definitions/PortfolioStatus"
  PortfolioStatus:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  IDResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
