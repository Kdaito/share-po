swagger: '2.0'
info:
  title: share-po
  description: "ポートフォリオを共有、評価できるサイトです"
  version: 1.0.0
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
host: "localhost:1991"
basePath: /v1
securityDefinitions:
  tokenAuth:
    name: Authorization
    type: apiKey
    in: header
tags:
  - name: user
    description: "ユーザーについて"
paths:
  # /users:
  #   get:
  #     tags:
  #       - user
  #     summary: "選手全件取得"
  #     description: "全ての選手情報を取得します"
  #     operationId: index-players
  #     responses:
  #       '200':
  #         description: Successful operation
  #         schema:
  #           $ref: '#/definitions/PlayerList'
  /user:
    post:
      tags:
        - user
      summary: "ユーザー新規登録"
      description: "ユーザーを新規登録します"
      operationId: create-user
      security:
        - tokenAuth: []
      parameters:
      - name: body
        in: body
        required: true
        description: 'ユーザー新規登録の際のbody'
        schema:
          $ref: '#/definitions/UserRequest'
      responses:
        '200':
            description: Successful operation
            schema:
              $ref: '#/definitions/User'
  "/user/{firebaseUid}":
  #   put:
  #     tags:
  #       - user
  #     summary: "選手情報更新"
  #     description: "選手情報をidを利用して更新します"
  #     operationId: update-user
  #     parameters:
  #       - type: integer
  #         format: int64
  #         in: path
  #         name: id
  #         required: true
  #         description: "選手のid"
  #       - name: body
  #         in: body
  #         required: true
  #         description: "更新する選手の情報を入力してください"
  #         schema:
  #           $ref: '#/definitions/UserRequest'
  #     responses:
  #       '200':
  #         description: Successful operation
  #         schema:
  #           $ref: '#/definitions/IDResponse'
    get:
      tags:
        - user
      summary: "ユーザー情報取得"
      description: "idを利用してユーザー情報を取得します"
      operationId: get-user
      security:
        - tokenAuth: []
      parameters:
        - type: string
          in: path
          name: firebaseUid
          required: true
          description: "firebase uid"
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/User'
definitions:
  UserList:
    type: array
    items:
      $ref: '#/definitions/User'
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      firebaseUid:
        type: string
      email:
        type: string
      createdAt:
        type: string
        format: date-time
  UserRequest:
    type: object
    properties:
      firebaseUid:
        type: string
      name:
        type: string
      email:
        type: string
  IDResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
